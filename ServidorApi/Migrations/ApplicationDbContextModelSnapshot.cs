// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServidorApi.Data;

#nullable disable

namespace ServidorApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServidorApi.Data.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConsultaId"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InmuebleId")
                        .HasColumnType("integer");

                    b.Property<string>("Mensaje")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("ConsultaId");

                    b.HasIndex("InmuebleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ServidorApi.Data.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ImagenId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("InmuebleId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("ImagenId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("ServidorApi.Data.Inmueble", b =>
                {
                    b.Property<int>("InmuebleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InmuebleId"));

                    b.Property<decimal?>("AreaTerreno")
                        .HasColumnType("numeric");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MetrosCubiertos")
                        .HasColumnType("numeric");

                    b.Property<int>("NumeroBaños")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroHabitaciones")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int>("PropietarioId")
                        .HasColumnType("integer");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TieneAscensor")
                        .HasColumnType("boolean");

                    b.Property<bool>("TieneCochera")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoInmueble")
                        .HasColumnType("integer");

                    b.HasKey("InmuebleId");

                    b.HasIndex("PropietarioId");

                    b.ToTable("Inmuebles");
                });

            modelBuilder.Entity("ServidorApi.Data.Transaccion", b =>
                {
                    b.Property<int>("TransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransaccionId"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("InmuebleId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("TransaccionId");

                    b.HasIndex("InmuebleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("ServidorApi.Data.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<int>("Rol")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ServidorApi.Data.UsuarioFavorito", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("InmuebleId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.HasKey("UsuarioId", "InmuebleId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("UsuariosFavoritos");
                });

            modelBuilder.Entity("ServidorApi.Data.UsuarioInmueble", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("InmuebleId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.HasKey("UsuarioId", "InmuebleId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("UsuarioInmuebles");
                });

            modelBuilder.Entity("ServidorApi.Data.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VideoId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("InmuebleId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("VideoId");

                    b.HasIndex("InmuebleId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("ServidorApi.Data.Consulta", b =>
                {
                    b.HasOne("ServidorApi.Data.Inmueble", "Inmueble")
                        .WithMany("Consultas")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServidorApi.Data.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inmueble");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServidorApi.Data.Imagen", b =>
                {
                    b.HasOne("ServidorApi.Data.Inmueble", "Inmueble")
                        .WithMany("Imagenes")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inmueble");
                });

            modelBuilder.Entity("ServidorApi.Data.Inmueble", b =>
                {
                    b.HasOne("ServidorApi.Data.Usuario", "Propietario")
                        .WithMany("InmueblesPropios")
                        .HasForeignKey("PropietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("ServidorApi.Data.Transaccion", b =>
                {
                    b.HasOne("ServidorApi.Data.Inmueble", "Inmueble")
                        .WithMany("Transacciones")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServidorApi.Data.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inmueble");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServidorApi.Data.UsuarioFavorito", b =>
                {
                    b.HasOne("ServidorApi.Data.Inmueble", "Inmueble")
                        .WithMany("UsuariosFavoritos")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServidorApi.Data.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inmueble");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServidorApi.Data.UsuarioInmueble", b =>
                {
                    b.HasOne("ServidorApi.Data.Inmueble", "Inmueble")
                        .WithMany("UsuarioInmuebles")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServidorApi.Data.Usuario", "Usuario")
                        .WithMany("UsuarioInmuebles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inmueble");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ServidorApi.Data.Video", b =>
                {
                    b.HasOne("ServidorApi.Data.Inmueble", "Inmueble")
                        .WithMany("Videos")
                        .HasForeignKey("InmuebleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inmueble");
                });

            modelBuilder.Entity("ServidorApi.Data.Inmueble", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Imagenes");

                    b.Navigation("Transacciones");

                    b.Navigation("UsuarioInmuebles");

                    b.Navigation("UsuariosFavoritos");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("ServidorApi.Data.Usuario", b =>
                {
                    b.Navigation("InmueblesPropios");

                    b.Navigation("UsuarioInmuebles");
                });
#pragma warning restore 612, 618
        }
    }
}
